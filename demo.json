{
  "openapi": "3.0.0",
  "info": {
    "title": "Demographic Update API",
    "description": "This API is built in adherence to the FHIR transaction model, emphasizing single-resource operations to ensure atomic transactions and data integrity. Each endpoint is tailored to a specific resource type to maintain data consistency:\n- **Practitioner Endpoint**: This endpoint is specifically designed to handle practitioner details. It ensures data integrity by exclusively accepting data related to the 'Practitioner' resource type. Ideal for managing individual medical personnel data, including their specialties, qualifications, and contact information.\n- **Location Endpoint**: Concentrates on medical facility locations, taking in only the 'Location' resource type.\n- **Organization Endpoint**: Caters specifically to medical organization data, processing only the 'Organization' resource type.\n- **PractitionerRole Endpoint**: Manages roles associated with medical practitioners, and accepts only the 'PractitionerRole' resource type.\n- **Practitioner Add Endpoint**: This is a unique endpoint to add a brand new practitioner to a TIN that demands comprehensive provider information, including credentialing details. Unlike other endpoints, it expects a bundle containing multiple resources. Ensure that the data submitted here is a complete package of provider information.\n- **Status Inquiry Endpoint**: Provides status of the ATC submission.\n> Users should be diligent in ensuring that their requests align with the specific resource type designated for each endpoint. Any mismatches will lead to request rejection.",
    "contact": {
      "name": "Central Intake",
      "url": "https://central-intake.s3docs.optum.com/",
      "email": "Demo_Central_Intake@ds.uhc.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://gateway-stage.optum.com/api/dev/pdr/centralintake/demo-intake/v1"
    },
    {
      "url": "https://gateway-stage.optum.com/api/stage/pdr/centralintake/demo-intake/v1"
    },
    {
      "url": "https://gateway.optum.com/api/pdr/centralintake/demo-intake/v1"
    }
  ],
  "paths": {
    "/atc/practitioner": {
      "post": {
        "tags": [
          "Process ATC Submission for Practitioner"
        ],
        "summary": "Add/Update Practitioner",
        "description": "This endpoint accepts and processes only the 'Practitioner' resource type. Users can submit information related to a medical practitioner. Ensure that the submitted data is specific to the practitioner's  individual details and credentials. Requests containing non-practitioner  resource types will be rejected.",
        "operationId": "processATCPractitionerSubmission",
        "parameters": [
          {
            "name": "isComplete",
            "in": "header",
            "required": false,
            "description": "The isComplete flag indicates when submission for practitioner is complete.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bundle"
              },
              "example": {
                "resourceType": "Bundle",
                "meta": {
                  "tag": [
                    {
                      "system": "tin",
                      "code": "999999999"
                    },
                    {
                      "system": "npi",
                      "code": "1234567890"
                    },
                    {
                      "system": "submitter-name",
                      "code": "Jay Suthar"
                    },
                    {
                      "system": "submitter-email",
                      "code": "jay.suthar@optum.com"
                    },
                    {
                      "system": "group-npi",
                      "code": "1234567890"
                    }
                  ]
                },
                "type": "transaction",
                "entry": [
                  {
                    "resource": {
                      "resourceType": "Practitioner",
                      "active": true,
                      "birthDate": "1970-01-01",
                      "gender": "male",
                      "name": [
                        {
                          "family": "Doe",
                          "given": [
                            "John"
                          ],
                          "suffix": [
                            "Jr."
                          ],
                          "prefix": [
                            "Dr."
                          ]
                        }
                      ],
                      "identifier": [
                        {
                          "system": "medicare-id",
                          "value": "1234567890"
                        },
                        {
                          "system": "medicaid-id",
                          "value": "456555454",
                          "extension": [
                            {
                              "url": "address",
                              "valueAddress": {
                                "type": "physical",
                                "line": [
                                  "123 Main St."
                                ],
                                "city": "Anytown",
                                "state": "NY",
                                "country": "United States",
                                "postalCode": "12345",
                                "extension": [
                                  {
                                    "url": "uhg-use",
                                    "valueString": "work"
                                  },
                                  {
                                    "url": "rank",
                                    "valuePositiveInt": 1
                                  }
                                ]
                              }
                            },
                            {
                              "url": "issuing-state",
                              "valueString": "NY"
                            },
                            {
                              "url": "status",
                              "valueString": "active"
                            }
                          ]
                        },
                        {
                          "system": "social-security-number",
                          "value": "1234567890"
                        }
                      ],
                      "qualification": [
                        {
                          "code": {
                            "coding": [
                              {
                                "system": "degree",
                                "code": "medical doctor"
                              }
                            ],
                            "extension": [
                              {
                                "url": "status",
                                "valueString": "active"
                              },
                              {
                                "url": "rank",
                                "valuePositiveInt": 1
                              }
                            ]
                          }
                        },
                        {
                          "code": {
                            "coding": [
                              {
                                "system": "degree",
                                "code": "master of science"
                              }
                            ],
                            "extension": [
                              {
                                "url": "status",
                                "valueString": "inactive"
                              },
                              {
                                "url": "rank",
                                "valuePositiveInt": 2
                              }
                            ]
                          }
                        },
                        {
                          "identifier": [
                            {
                              "system": "cultural-competency-training",
                              "value": "Cultural Humility"
                            }
                          ],
                          "period": {
                            "start": "2019-01-01",
                            "end": "2020-01-01"
                          },
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            }
                          ]
                        },
                        {
                          "identifier": [
                            {
                              "system": "license-number",
                              "value": "123456789"
                            }
                          ],
                          "period": {
                            "start": "2020-01-01",
                            "end": "2021-01-01"
                          },
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            },
                            {
                              "url": "state",
                              "valueString": "NY"
                            }
                          ]
                        },
                        {
                          "identifier": [
                            {
                              "system": "dea-number",
                              "value": "AB1234567"
                            }
                          ],
                          "period": {
                            "end": "2022-01-01"
                          },
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            }
                          ]
                        },
                        {
                          "identifier": [
                            {
                              "system": "cds-number",
                              "value": "78909876"
                            }
                          ],
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            }
                          ]
                        }
                      ],
                      "extension": [
                        {
                          "url": "tin-effective-date",
                          "valueDate": "2023-02-02"
                        },
                        {
                          "url": "tin-inactivate",
                          "extension": [
                            {
                              "url": "termination-date",
                              "valueDate": "2023-02-02"
                            },
                            {
                              "url": "termination-reason",
                              "valueString": "retired"
                            }
                          ]
                        },
                        {
                          "url": "hospital-affiliation",
                          "valueCodeableConcept": {
                            "coding": [
                              {
                                "system": "affiliated-provider-name",
                                "code": "My Hospital Name 1",
                                "extension": [
                                  {
                                    "url": "admitting-privilege-type",
                                    "valueCodeableConcept": {
                                      "coding": [
                                        {
                                          "code": "admitting"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "url": "status",
                                    "valueString": "active"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "id": "UHC000004248891",
                  "issue": [
                    {
                      "severity": "information",
                      "code": "informational"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "issue": [
                    {
                      "severity": "error",
                      "code": "invalid",
                      "details": {
                        "coding": [
                          {
                            "code": "2402",
                            "display": "Invalid format"
                          }
                        ]
                      },
                      "diagnostics": "Date must be valid and in yyyy-MM-dd format",
                      "expression": [
                        "$.entry[0].resource.qualification[0].period.start"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "issue": [
                    {
                      "severity": "error",
                      "code": "exception",
                      "details": {
                        "coding": [
                          {
                            "code": "5500",
                            "display": "Internal Server Error"
                          }
                        ]
                      },
                      "diagnostics": "Internal server error. Please try again later",
                      "expression": [
                        ""
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth_Stage": []
          },
          {
            "OAuth_Prod": []
          },
          {
            "JWT": []
          }
        ]
      }
    },
    "/atc/practitioner-role": {
      "post": {
        "tags": [
          "Process ATC Submission for Practitioner Role"
        ],
        "summary": "Add/Update Practitioner Role",
        "description": "Submit or update roles associated with medical practitioners via this  endpoint. The system accepts only 'PractitionerRole' resource type data. Ensure that the submitted roles align with the practitioners in the system.  Any request containing data not specific to practitioner roles will be  rejected.",
        "operationId": "processATCPractitionerRoleSubmission",
        "parameters": [
          {
            "name": "isComplete",
            "in": "header",
            "required": false,
            "description": "The isComplete flag indicates when submission for practitioner is complete.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bundle"
              },
              "example": {
                "resourceType": "Bundle",
                "meta": {
                  "tag": [
                    {
                      "system": "tin",
                      "code": "999999999"
                    },
                    {
                      "system": "npi",
                      "code": "1234567890"
                    },
                    {
                      "system": "submitter-name",
                      "code": "Jay Suthar"
                    },
                    {
                      "system": "submitter-email",
                      "code": "jay.suthar@optum.com"
                    },
                    {
                      "system": "group-npi",
                      "code": "1234567890"
                    }
                  ]
                },
                "type": "transaction",
                "entry": [
                  {
                    "resource": {
                      "resourceType": "PractitionerRole",
                      "specialty": [
                        {
                          "text": "orthopedic surgery",
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            },
                            {
                              "url": "primary-specialty-indicator",
                              "valueBoolean": true
                            },
                            {
                              "url": "board-cert-status",
                              "valueString": "certified"
                            },
                            {
                              "url": "board-effective-date",
                              "valueDate": "2023-06-11"
                            },
                            {
                              "url": "board-exp-date",
                              "valueDate": "2024-06-11"
                            },
                            {
                              "url": "supervising-specialty",
                              "valueString": "Anesthesiology"
                            },
                            {
                              "url": "area-of-expertise",
                              "valueCodeableConcept": {
                                "coding": [
                                  {
                                    "code": "trauma informed care",
                                    "extension": [
                                      {
                                        "url": "directory-display",
                                        "valueBoolean": false
                                      },
                                      {
                                        "url": "status",
                                        "valueString": "active"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ],
                      "extension": [
                        {
                          "url": "pcp-indicator",
                          "valueBoolean": true
                        },
                        {
                          "url": "credentialing-date",
                          "valueDate": "2022-11-11"
                        },
                        {
                          "url": "recredentialing-date",
                          "valueDate": "2022-11-11"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "id": "UHC120004248891",
                  "issue": [
                    {
                      "severity": "information",
                      "code": "informational"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "issue": [
                    {
                      "severity": "error",
                      "code": "invalid",
                      "details": {
                        "coding": [
                          {
                            "code": "2402",
                            "display": "Invalid format"
                          }
                        ]
                      },
                      "diagnostics": "Date must be valid and in yyyy-MM-dd format",
                      "expression": [
                        "$.entry[0].resource.specialty[0].extension[1].valueDate"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "issue": [
                    {
                      "severity": "error",
                      "code": "exception",
                      "details": {
                        "coding": [
                          {
                            "code": "5500",
                            "display": "Internal Server Error"
                          }
                        ]
                      },
                      "diagnostics": "Internal server error. Please try again later",
                      "expression": [
                        ""
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth_Stage": []
          },
          {
            "OAuth_Prod": []
          },
          {
            "JWT": []
          }
        ]
      }
    },
    "/atc/organization": {
      "post": {
        "tags": [
          "Process ATC Submission for Organization"
        ],
        "summary": "Add/Update Organization",
        "description": "This endpoint is specifically for the submission or update of medical  organization details. Only data of the 'Organization' resource type is  accepted here. Ensure that the data accurately reflects the organization's  attributes and functionalities. Non-organization resource type requests  will be declined.",
        "operationId": "processATCOrganizationSubmission",
        "parameters": [
          {
            "name": "isComplete",
            "in": "header",
            "required": false,
            "description": "The isComplete flag indicates when submission for practitioner is complete.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bundle"
              },
              "example": {
                "resourceType": "Bundle",
                "meta": {
                  "tag": [
                    {
                      "system": "tin",
                      "code": "999999999"
                    },
                    {
                      "system": "npi",
                      "code": "1234567890"
                    },
                    {
                      "system": "submitter-name",
                      "code": "Jay Suthar"
                    },
                    {
                      "system": "submitter-email",
                      "code": "jay.suthar@optum.com"
                    },
                    {
                      "system": "group-npi",
                      "code": "1234567890"
                    }
                  ]
                },
                "type": "transaction",
                "entry": [
                  {
                    "resource": {
                      "resourceType": "Organization",
                      "name": "Robert Wood Johnson, LLC",
                      "contact": [
                        {
                          "name": {
                            "family": "Johnson",
                            "given": [
                              "Robert"
                            ]
                          },
                          "purpose": {
                            "coding": [
                              {
                                "system": "contact-type",
                                "code": "office manager"
                              }
                            ]
                          },
                          "telecom": [
                            {
                              "system": "phone",
                              "value": "1234567890",
                              "extension": [
                                {
                                  "url": "phone-extension",
                                  "valueString": "9101"
                                },
                                {
                                  "url": "status",
                                  "valueString": "active"
                                }
                              ]
                            }
                          ],
                          "address": {
                            "type": "physical",
                            "line": [
                              "123 Main Street"
                            ],
                            "city": "Baltimore",
                            "state": "MD",
                            "postalCode": "21201",
                            "country": "United States",
                            "extension": [
                              {
                                "url": "uhg-use",
                                "valueString": "work"
                              },
                              {
                                "url": "rank",
                                "valuePositiveInt": 1
                              }
                            ]
                          },
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            }
                          ]
                        }
                      ],
                      "extension": [
                        {
                          "url": "tax-id-incorporation-status",
                          "valueString": "limited liability corporation"
                        },
                        {
                          "url": "tax-id-legal-owner",
                          "valueString": "Robert Wood Johnson"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "id": "UHC000003456891",
                  "issue": [
                    {
                      "severity": "information",
                      "code": "informational"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "issue": [
                    {
                      "severity": "error",
                      "code": "invalid",
                      "details": {
                        "coding": [
                          {
                            "code": "2403",
                            "display": "Invalid value"
                          }
                        ]
                      },
                      "diagnostics": "Invalid value. It must be one of [tax-id-incorporation-status, tax-id-legal-owner]",
                      "expression": [
                        "$.entry[0].resource.extension[0].url"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "issue": [
                    {
                      "severity": "error",
                      "code": "exception",
                      "details": {
                        "coding": [
                          {
                            "code": "5500",
                            "display": "Internal Server Error"
                          }
                        ]
                      },
                      "diagnostics": "Internal server error. Please try again later",
                      "expression": [
                        ""
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth_Stage": []
          },
          {
            "OAuth_Prod": []
          },
          {
            "JWT": []
          }
        ]
      }
    },
    "/atc/location": {
      "post": {
        "tags": [
          "Process ATC Submission for Location"
        ],
        "summary": "Add/Remove Location",
        "description": "Use this endpoint to submit or update information related to a medical  facility's location. Only 'Location' resource type data is accepted. Requests with data that don't correspond to a location's specifications will be rejected.",
        "operationId": "processATCLocationSubmission",
        "parameters": [
          {
            "name": "isComplete",
            "in": "header",
            "required": false,
            "description": "The isComplete flag indicates when submission for practitioner is complete.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bundle"
              },
              "example": {
                "resourceType": "Bundle",
                "meta": {
                  "tag": [
                    {
                      "system": "tin",
                      "code": "999999999"
                    },
                    {
                      "system": "npi",
                      "code": "1234567890"
                    },
                    {
                      "system": "submitter-name",
                      "code": "Jay Suthar"
                    },
                    {
                      "system": "submitter-email",
                      "code": "jay.suthar@optum.com"
                    },
                    {
                      "system": "group-npi",
                      "code": "1234567890"
                    }
                  ]
                },
                "type": "transaction",
                "entry": [
                  {
                    "resource": {
                      "resourceType": "Location",
                      "name": "RWJ Location, INC",
                      "status": "active",
                      "address": {
                        "type": "physical",
                        "line": [
                          "252 brunswick St"
                        ],
                        "city": "New Brunswick",
                        "state": "NJ",
                        "postalCode": "08823-5206",
                        "country": "United States",
                        "extension": [
                          {
                            "url": "uhg-use",
                            "valueString": "work"
                          },
                          {
                            "url": "rank",
                            "valuePositiveInt": 1
                          },
                          {
                            "url": "address-directory-indicator",
                            "valueBoolean": true
                          }
                        ],
                        "period": {
                          "end": "2011-05-23",
                          "extension": [
                            {
                              "url": "end-reason",
                              "valueString": "office location closed"
                            }
                          ]
                        }
                      },
                      "telecom": [
                        {
                          "system": "phone",
                          "value": "7325551212",
                          "extension": [
                            {
                              "url": "uhg-use",
                              "valueString": "work"
                            },
                            {
                              "url": "phone-directory-indicator",
                              "valueBoolean": true
                            },
                            {
                              "url": "phone-extension",
                              "valueString": "5677"
                            },
                            {
                              "url": "status",
                              "valueString": "active"
                            },
                            {
                              "url": "rank",
                              "valuePositiveInt": 1
                            }
                          ]
                        },
                        {
                          "system": "fax",
                          "value": "7325551212",
                          "extension": [
                            {
                              "url": "uhg-use",
                              "valueString": "work"
                            },
                            {
                              "url": "status",
                              "valueString": "active"
                            }
                          ]
                        },
                        {
                          "system": "email",
                          "value": "abc@hotmail.com",
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            }
                          ]
                        },
                        {
                          "system": "email",
                          "value": "abc@hotmail.com",
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            },
                            {
                              "url": "category",
                              "valueString": "public-display-email"
                            }
                          ]
                        },
                        {
                          "system": "url",
                          "value": "http://www.google.com",
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            },
                            {
                              "url": "category",
                              "valueString": "telehealth-only"
                            }
                          ]
                        }
                      ],
                      "hoursOfOperation": [
                        {
                          "daysOfWeek": [
                            "mon",
                            "tue",
                            "wed",
                            "thu",
                            "fri"
                          ],
                          "allDay": true
                        },
                        {
                          "daysOfWeek": [
                            "sat"
                          ],
                          "allDay": false,
                          "openingTime": "08:00:00",
                          "closingTime": "12:00:00"
                        }
                      ],
                      "extension": [
                        {
                          "url": "billing-address",
                          "valueAddress": {
                            "type": "physical",
                            "line": [
                              "300 brunswick St"
                            ],
                            "city": "New Brunswick",
                            "state": "NJ",
                            "postalCode": "08823-5206",
                            "country": "United States",
                            "extension": [
                              {
                                "url": "uhg-use",
                                "valueString": "billing"
                              },
                              {
                                "url": "rank",
                                "valuePositiveInt": 1
                              },
                              {
                                "url": "address-directory-indicator",
                                "valueBoolean": true
                              }
                            ]
                          }
                        },
                        {
                          "url": "ages-served",
                          "valueCodeableConcept": {
                            "coding": [
                              {
                                "system": "gender",
                                "code": "male"
                              },
                              {
                                "system": "age-min",
                                "code": "10"
                              },
                              {
                                "system": "age-max",
                                "code": "50"
                              }
                            ]
                          }
                        },
                        {
                          "url": "telehealth",
                          "valueCodeableConcept": {
                            "coding": [
                              {
                                "system": "service-type",
                                "code": "audio/video"
                              },
                              {
                                "system": "accepting-patients",
                                "code": "new"
                              },
                              {
                                "system": "scheduling-type",
                                "code": "scheduled"
                              }
                            ]
                          }
                        },
                        {
                          "url": "handicap-accessible",
                          "valueCodeableConcept": {
                            "coding": [
                              {
                                "code": "radiologic equipment",
                                "extension": [
                                  {
                                    "url": "status",
                                    "valueString": "active"
                                  }
                                ]
                              },
                              {
                                "code": "parking",
                                "extension": [
                                  {
                                    "url": "status",
                                    "valueString": "active"
                                  }
                                ]
                              },
                              {
                                "code": "portable lifts",
                                "extension": [
                                  {
                                    "url": "status",
                                    "valueString": "inactive"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "url": "communication",
                          "valueCodeableConcept": {
                            "coding": [
                              {
                                "system": "language",
                                "code": "spanish",
                                "extension": [
                                  {
                                    "url": "spoken-by",
                                    "valueString": "both"
                                  },
                                  {
                                    "url": "written-by",
                                    "valueString": "physician"
                                  },
                                  {
                                    "url": "status",
                                    "valueString": "active"
                                  }
                                ]
                              },
                              {
                                "system": "language",
                                "code": "spanish",
                                "extension": [
                                  {
                                    "url": "spoken-by",
                                    "valueString": "both"
                                  },
                                  {
                                    "url": "written-by",
                                    "valueString": "office staff"
                                  },
                                  {
                                    "url": "status",
                                    "valueString": "inactive"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "url": "accepting-patients",
                          "valueString": "existing"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "id": "UHC000004290891",
                  "issue": [
                    {
                      "severity": "information",
                      "code": "informational"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "issue": [
                    {
                      "severity": "error",
                      "code": "invalid",
                      "details": {
                        "coding": [
                          {
                            "code": "2402",
                            "display": "Invalid format"
                          }
                        ]
                      },
                      "diagnostics": "openingTime format is incorrect",
                      "expression": [
                        "$.entry[0].resource.hoursOfOperation[0].openingTime"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "issue": [
                    {
                      "details": {
                        "coding": [
                          {
                            "code": "5500",
                            "display": "Internal Server Error"
                          }
                        ]
                      }
                    },
                    {
                      "diagnostics": "Internal server error. Please try again later"
                    },
                    {
                      "expression": [
                        ""
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth_Stage": []
          },
          {
            "OAuth_Prod": []
          },
          {
            "JWT": []
          }
        ]
      }
    },
    "/atc/practitioner-add": {
      "post": {
        "tags": [
          "Process ATC Submission for Practitioner Add"
        ],
        "summary": "Add/Update Practitioner",
        "description": "This is a unique endpoint to add a brand new practitioner to a TIN that  demands comprehensive provider information,  including credentialing details. Unlike other endpoints,  it expects a bundle containing multiple resources.  Ensure that the data submitted here is a complete package of provider information.",
        "operationId": "processATCPractitionerAddSubmission",
        "parameters": [
          {
            "name": "isComplete",
            "in": "header",
            "required": false,
            "description": "The isComplete flag indicates when submission for practitioner is complete.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bundle"
              },
              "example": {
                "resourceType": "Bundle",
                "meta": {
                  "tag": [
                    {
                      "system": "tin",
                      "code": "999999999"
                    },
                    {
                      "system": "npi",
                      "code": "1234567890"
                    },
                    {
                      "system": "submitter-name",
                      "code": "Jay Suthar"
                    },
                    {
                      "system": "submitter-email",
                      "code": "jay.suthar@optum.com"
                    },
                    {
                      "system": "group-npi",
                      "code": "1234567890"
                    }
                  ]
                },
                "type": "transaction",
                "entry": [
                  {
                    "resource": {
                      "resourceType": "Practitioner",
                      "active": true,
                      "birthDate": "1970-01-01",
                      "gender": "male",
                      "name": [
                        {
                          "family": "Doe",
                          "given": [
                            "John"
                          ]
                        }
                      ],
                      "qualification": [
                        {
                          "code": {
                            "coding": [
                              {
                                "system": "degree",
                                "code": "medical doctor"
                              }
                            ],
                            "extension": [
                              {
                                "url": "status",
                                "valueString": "active"
                              },
                              {
                                "url": "rank",
                                "valuePositiveInt": 1
                              }
                            ]
                          }
                        },
                        {
                          "identifier": [
                            {
                              "system": "license-number",
                              "value": "123456789"
                            }
                          ],
                          "period": {
                            "start": "2020-01-01",
                            "end": "2021-01-01"
                          },
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            },
                            {
                              "url": "state",
                              "valueString": "NY"
                            }
                          ]
                        },
                        {
                          "identifier": [
                            {
                              "system": "dea-number",
                              "value": "AB1234567"
                            }
                          ],
                          "period": {
                            "end": "2022-01-01"
                          },
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            }
                          ]
                        },
                        {
                          "identifier": [
                            {
                              "system": "cds-number",
                              "value": "78909876"
                            }
                          ],
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            }
                          ]
                        }
                      ],
                      "extension": [
                        {
                          "url": "tin-effective-date",
                          "valueDate": "2023-02-02"
                        }
                      ]
                    }
                  },
                  {
                    "resource": {
                      "resourceType": "PractitionerRole",
                      "specialty": [
                        {
                          "text": "orthopedic surgery",
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            },
                            {
                              "url": "primary-specialty-indicator",
                              "valueBoolean": true
                            },
                            {
                              "url": "board-cert-status",
                              "valueString": "certified"
                            },
                            {
                              "url": "board-effective-date",
                              "valueDate": "2023-06-11"
                            },
                            {
                              "url": "board-exp-date",
                              "valueDate": "2024-06-11"
                            },
                            {
                              "url": "supervising-specialty",
                              "valueString": "Anesthesiology"
                            }
                          ]
                        }
                      ],
                      "extension": [
                        {
                          "url": "pcp-indicator",
                          "valueBoolean": true
                        },
                        {
                          "url": "credentialing-date",
                          "valueDate": "2022-11-11"
                        },
                        {
                          "url": "recredentialing-date",
                          "valueDate": "2022-11-11"
                        }
                      ]
                    }
                  },
                  {
                    "resource": {
                      "resourceType": "Organization",
                      "name": "Robert Wood Johnson, LLC",
                      "contact": [
                        {
                          "name": {
                            "family": "Johnson",
                            "given": [
                              "Robert"
                            ]
                          },
                          "purpose": {
                            "coding": [
                              {
                                "system": "contact-type",
                                "code": "office manager"
                              }
                            ]
                          },
                          "telecom": [
                            {
                              "system": "phone",
                              "value": "1234567890",
                              "extension": [
                                {
                                  "url": "phone-extension",
                                  "valueString": "9101"
                                },
                                {
                                  "url": "status",
                                  "valueString": "active"
                                }
                              ]
                            }
                          ],
                          "address": {
                            "type": "physical",
                            "line": [
                              "123 Main Street"
                            ],
                            "city": "Baltimore",
                            "state": "MD",
                            "postalCode": "21201",
                            "country": "United States",
                            "extension": [
                              {
                                "url": "uhg-use",
                                "valueString": "work"
                              },
                              {
                                "url": "rank",
                                "valuePositiveInt": 1
                              }
                            ]
                          },
                          "extension": [
                            {
                              "url": "status",
                              "valueString": "active"
                            }
                          ]
                        }
                      ],
                      "extension": [
                        {
                          "url": "tax-id-incorporation-status",
                          "valueString": "limited liability corporation"
                        },
                        {
                          "url": "tax-id-legal-owner",
                          "valueString": "Robert Wood Johnson"
                        }
                      ]
                    }
                  },
                  {
                    "resource": {
                      "resourceType": "Location",
                      "name": "RWJ Location, INC",
                      "status": "active",
                      "address": {
                        "type": "physical",
                        "line": [
                          "252 brunswick St"
                        ],
                        "city": "New Brunswick",
                        "state": "NJ",
                        "postalCode": "08823-5206",
                        "country": "United States",
                        "extension": [
                          {
                            "url": "uhg-use",
                            "valueString": "work"
                          },
                          {
                            "url": "rank",
                            "valuePositiveInt": 1
                          },
                          {
                            "url": "address-directory-indicator",
                            "valueBoolean": true
                          }
                        ],
                        "period": {
                          "end": "2011-05-23",
                          "extension": [
                            {
                              "url": "end-reason",
                              "valueString": "office location closed"
                            }
                          ]
                        }
                      },
                      "telecom": [
                        {
                          "system": "phone",
                          "value": "7325551212",
                          "extension": [
                            {
                              "url": "uhg-use",
                              "valueString": "work"
                            },
                            {
                              "url": "phone-directory-indicator",
                              "valueBoolean": true
                            },
                            {
                              "url": "phone-extension",
                              "valueString": "5677"
                            },
                            {
                              "url": "status",
                              "valueString": "active"
                            },
                            {
                              "url": "rank",
                              "valuePositiveInt": 1
                            }
                          ]
                        }
                      ],
                      "extension": [
                        {
                          "url": "billing-address",
                          "valueAddress": {
                            "type": "physical",
                            "line": [
                              "300 brunswick St"
                            ],
                            "city": "New Brunswick",
                            "state": "NJ",
                            "postalCode": "08823-5206",
                            "country": "United States",
                            "extension": [
                              {
                                "url": "uhg-use",
                                "valueString": "billing"
                              },
                              {
                                "url": "rank",
                                "valuePositiveInt": 1
                              },
                              {
                                "url": "address-directory-indicator",
                                "valueBoolean": true
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "id": "UHC000004241291",
                  "issue": [
                    {
                      "severity": "information",
                      "code": "informational"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "issue": [
                    {
                      "severity": "error",
                      "code": "invalid",
                      "details": {
                        "coding": [
                          {
                            "code": "2402",
                            "display": "Invalid format"
                          }
                        ]
                      },
                      "diagnostics": "Date must be valid and in yyyy-MM-dd format",
                      "expression": [
                        "$.entry[0].resource.qualification[0].period.start"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "issue": [
                    {
                      "severity": "error",
                      "code": "exception",
                      "details": {
                        "coding": [
                          {
                            "code": "5500",
                            "display": "Internal Server Error"
                          }
                        ]
                      },
                      "diagnostics": "Internal server error. Please try again later",
                      "expression": [
                        ""
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth_Stage": []
          },
          {
            "OAuth_Prod": []
          },
          {
            "JWT": []
          }
        ]
      }
    },
    "/status-inquiry": {
      "get": {
        "tags": [
          "Get the status of a submission using request ID."
        ],
        "summary": "Submission status",
        "description": "Use this endpoint to get the status of an ATC submission.",
        "operationId": "getSubmissionStatus",
        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "required": true,
            "description": "request ID received after a successful ATC submission.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "id": "UHC000000000000",
                  "issue": [
                    {
                      "severity": "information",
                      "code": "informational",
                      "details": {
                        "coding": [
                          {
                            "display": "IN_PROGRESS"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                },
                "example": {
                  "resourceType": "OperationOutcome",
                  "issue": [
                    {
                      "severity": "error",
                      "code": "exception",
                      "details": {
                        "coding": [
                          {
                            "code": "5500",
                            "display": "Internal Server Error"
                          }
                        ]
                      },
                      "diagnostics": "Internal server error. Please try again later",
                      "expression": [
                        ""
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "jwt"
      },
      "OAuth_Stage": {
        "type": "oauth2",
        "description": "This API uses OAuth",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://gateway-stage.optum.com/auth/oauth2/cached/token",
            "scopes": {}
          }
        }
      },
      "OAuth_Prod": {
        "type": "oauth2",
        "description": "This API uses OAuth",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://gateway.optum.com/auth/oauth2/cached/token",
            "scopes": {}
          }
        }
      }
    },
    "schemas": {
      "Bundle": {
        "description": "A container for a collection of resources.",
        "properties": {
          "resourceType": {
            "description": "This is a Bundle resource",
            "enum": [
              "Bundle"
            ]
          },
          "id": {
            "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
            "$ref": "#/components/schemas/id"
          },
          "meta": {
            "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
            "$ref": "#/components/schemas/Meta"
          },
          "implicitRules": {
            "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
            "$ref": "#/components/schemas/uri"
          },
          "language": {
            "description": "The base language in which the resource is written.",
            "$ref": "#/components/schemas/code"
          },
          "identifier": {
            "description": "A persistent identifier for the bundle that won't change as a bundle is copied from server to server.",
            "$ref": "#/components/schemas/Identifier"
          },
          "type": {
            "description": "Indicates the purpose of this bundle - how it is intended to be used.",
            "enum": [
              "document",
              "message",
              "transaction",
              "transaction-response",
              "batch",
              "batch-response",
              "history",
              "searchset",
              "collection"
            ]
          },
          "timestamp": {
            "description": "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle.",
            "$ref": "#/components/schemas/instant"
          },
          "total": {
            "description": "If a set of search matches, this is the total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle.",
            "$ref": "#/components/schemas/unsignedInt"
          },
          "link": {
            "description": "A series of links that provide context to this bundle.",
            "items": {
              "$ref": "#/components/schemas/Bundle_Link"
            },
            "type": "array"
          },
          "entry": {
            "description": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).",
            "items": {
              "$ref": "#/components/schemas/Bundle_Entry"
            },
            "type": "array"
          },
          "signature": {
            "description": "Digital Signature - base64 encoded. XML-DSig or a JWT.",
            "$ref": "#/components/schemas/Signature"
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceType"
        ]
      },
      "Location": {
        "description": "Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.",
        "properties": {
          "resourceType": {
            "description": "This is a Location resource",
            "enum": [
              "Location"
            ]
          },
          "id": {
            "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
            "$ref": "#/components/schemas/id"
          },
          "meta": {
            "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
            "$ref": "#/components/schemas/Meta"
          },
          "implicitRules": {
            "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
            "$ref": "#/components/schemas/uri"
          },
          "language": {
            "description": "The base language in which the resource is written.",
            "$ref": "#/components/schemas/code"
          },
          "text": {
            "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
            "$ref": "#/components/schemas/Narrative"
          },
          "contained": {
            "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
            "items": {
              "$ref": "#/components/schemas/ResourceList"
            },
            "type": "array"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "identifier": {
            "description": "Unique code or number identifying the location to its users.",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "type": "array"
          },
          "status": {
            "description": "The status property covers the general availability of the resource, not the current value which may be covered by the operationStatus, or by a schedule/slots if they are configured for the location.",
            "enum": [
              "active",
              "suspended",
              "inactive"
            ]
          },
          "operationalStatus": {
            "description": "The operational status covers operation values most relevant to beds (but can also apply to rooms/units/chairs/etc. such as an isolation unit/dialysis chair). This typically covers concepts such as contamination, housekeeping, and other activities like maintenance.",
            "$ref": "#/components/schemas/Coding"
          },
          "name": {
            "description": "Name of the location as used by humans. Does not need to be unique.",
            "$ref": "#/components/schemas/string"
          },
          "alias": {
            "description": "A list of alternate names that the location is known as, or was known as, in the past.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "description": {
            "description": "Description of the Location, which helps in finding or referencing the place.",
            "$ref": "#/components/schemas/string"
          },
          "mode": {
            "description": "Indicates whether a resource instance represents a specific location or a class of locations.",
            "enum": [
              "instance",
              "kind"
            ]
          },
          "type": {
            "description": "Indicates the type of function performed at the location.",
            "items": {
              "$ref": "#/components/schemas/CodeableConcept"
            },
            "type": "array"
          },
          "telecom": {
            "description": "The contact details of communication devices available at the location. This can include phone numbers, fax numbers, mobile numbers, email addresses and web sites.",
            "items": {
              "$ref": "#/components/schemas/ContactPoint"
            },
            "type": "array"
          },
          "address": {
            "description": "Physical location.",
            "$ref": "#/components/schemas/Address"
          },
          "physicalType": {
            "description": "Physical form of the location, e.g. building, room, vehicle, road.",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "position": {
            "description": "The absolute geographic location of the Location, expressed using the WGS84 datum (This is the same co-ordinate system used in KML).",
            "$ref": "#/components/schemas/Location_Position"
          },
          "managingOrganization": {
            "description": "The organization responsible for the provisioning and upkeep of the location.",
            "$ref": "#/components/schemas/Reference"
          },
          "partOf": {
            "description": "Another Location of which this Location is physically a part of.",
            "$ref": "#/components/schemas/Reference"
          },
          "hoursOfOperation": {
            "description": "What days/times during a week is this location usually open.",
            "items": {
              "$ref": "#/components/schemas/Location_HoursOfOperation"
            },
            "type": "array"
          },
          "availabilityExceptions": {
            "description": "A description of when the locations opening ours are different to normal, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as detailed in the opening hours Times.",
            "$ref": "#/components/schemas/string"
          },
          "endpoint": {
            "description": "Technical endpoints providing access to services operated for the location.",
            "items": {
              "$ref": "#/components/schemas/Reference"
            },
            "type": "array"
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceType"
        ]
      },
      "OperationOutcome": {
        "description": "A collection of error, warning, or information messages that result from a system action.",
        "properties": {
          "resourceType": {
            "description": "This is a OperationOutcome resource",
            "enum": [
              "OperationOutcome"
            ]
          },
          "id": {
            "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
            "$ref": "#/components/schemas/id"
          },
          "meta": {
            "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
            "$ref": "#/components/schemas/Meta"
          },
          "implicitRules": {
            "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
            "$ref": "#/components/schemas/uri"
          },
          "language": {
            "description": "The base language in which the resource is written.",
            "$ref": "#/components/schemas/code"
          },
          "text": {
            "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
            "$ref": "#/components/schemas/Narrative"
          },
          "contained": {
            "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
            "items": {
              "$ref": "#/components/schemas/ResourceList"
            },
            "type": "array"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "issue": {
            "description": "An error, warning, or information message that results from a system action.",
            "items": {
              "$ref": "#/components/schemas/OperationOutcome_Issue"
            },
            "type": "array"
          }
        },
        "additionalProperties": false,
        "required": [
          "issue",
          "resourceType"
        ]
      },
      "OperationOutcome_Issue": {
        "description": "A collection of error, warning, or information messages that result from a system action.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "severity": {
            "description": "Indicates whether the issue indicates a variation from successful processing.",
            "enum": [
              "fatal",
              "error",
              "warning",
              "information"
            ]
          },
          "code": {
            "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.",
            "enum": [
              "invalid",
              "structure",
              "required",
              "value",
              "invariant",
              "security",
              "login",
              "unknown",
              "expired",
              "forbidden",
              "suppressed",
              "processing",
              "not-supported",
              "duplicate",
              "multiple-matches",
              "not-found",
              "deleted",
              "too-long",
              "code-invalid",
              "extension",
              "too-costly",
              "business-rule",
              "conflict",
              "transient",
              "lock-error",
              "no-store",
              "exception",
              "timeout",
              "incomplete",
              "throttled",
              "informational"
            ]
          },
          "details": {
            "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error.",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "diagnostics": {
            "description": "Additional diagnostic information about the issue.",
            "$ref": "#/components/schemas/string"
          },
          "location": {
            "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "expression": {
            "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "Organization": {
        "description": "A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.",
        "properties": {
          "resourceType": {
            "description": "This is a Organization resource",
            "enum": [
              "Organization"
            ]
          },
          "id": {
            "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
            "$ref": "#/components/schemas/id"
          },
          "meta": {
            "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
            "$ref": "#/components/schemas/Meta"
          },
          "implicitRules": {
            "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
            "$ref": "#/components/schemas/uri"
          },
          "language": {
            "description": "The base language in which the resource is written.",
            "$ref": "#/components/schemas/code"
          },
          "text": {
            "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
            "$ref": "#/components/schemas/Narrative"
          },
          "contained": {
            "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
            "items": {
              "$ref": "#/components/schemas/ResourceList"
            },
            "type": "array"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "identifier": {
            "description": "Identifier for the organization that is used to identify the organization across multiple disparate systems.",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "type": "array"
          },
          "active": {
            "description": "Whether the organization's record is still in active use.",
            "$ref": "#/components/schemas/boolean"
          },
          "type": {
            "description": "The kind(s) of organization that this is.",
            "items": {
              "$ref": "#/components/schemas/CodeableConcept"
            },
            "type": "array"
          },
          "name": {
            "description": "A name associated with the organization.",
            "$ref": "#/components/schemas/string"
          },
          "alias": {
            "description": "A list of alternate names that the organization is known as, or was known as in the past.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "telecom": {
            "description": "A contact detail for the organization.",
            "items": {
              "$ref": "#/components/schemas/ContactPoint"
            },
            "type": "array"
          },
          "address": {
            "description": "An address for the organization.",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "type": "array"
          },
          "partOf": {
            "description": "The organization of which this organization forms a part.",
            "$ref": "#/components/schemas/Reference"
          },
          "contact": {
            "description": "Contact for the organization for a certain purpose.",
            "items": {
              "$ref": "#/components/schemas/Organization_Contact"
            },
            "type": "array"
          },
          "endpoint": {
            "description": "Technical endpoints providing access to services operated for the organization.",
            "items": {
              "$ref": "#/components/schemas/Reference"
            },
            "type": "array"
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceType"
        ]
      },
      "Practitioner": {
        "description": "A person who is directly or indirectly involved in the provisioning of healthcare.",
        "properties": {
          "resourceType": {
            "description": "This is a Practitioner resource",
            "enum": [
              "Practitioner"
            ]
          },
          "id": {
            "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
            "$ref": "#/components/schemas/id"
          },
          "meta": {
            "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
            "$ref": "#/components/schemas/Meta"
          },
          "implicitRules": {
            "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
            "$ref": "#/components/schemas/uri"
          },
          "language": {
            "description": "The base language in which the resource is written.",
            "$ref": "#/components/schemas/code"
          },
          "text": {
            "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
            "$ref": "#/components/schemas/Narrative"
          },
          "contained": {
            "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
            "items": {
              "$ref": "#/components/schemas/ResourceList"
            },
            "type": "array"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "identifier": {
            "description": "An identifier that applies to this person in this role.",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "type": "array"
          },
          "active": {
            "description": "Whether this practitioner's record is in active use.",
            "$ref": "#/components/schemas/boolean"
          },
          "name": {
            "description": "The name(s) associated with the practitioner.",
            "items": {
              "$ref": "#/components/schemas/HumanName"
            },
            "type": "array"
          },
          "telecom": {
            "description": "A contact detail for the practitioner, e.g. a telephone number or an email address.",
            "items": {
              "$ref": "#/components/schemas/ContactPoint"
            },
            "type": "array"
          },
          "address": {
            "description": "Address(es) of the practitioner that are not role specific (typically home address). \rWork addresses are not typically entered in this property as they are usually role dependent.",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "type": "array"
          },
          "gender": {
            "description": "Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes.",
            "enum": [
              "male",
              "female",
              "unknown"
            ]
          },
          "birthDate": {
            "description": "The date of birth for the practitioner.",
            "$ref": "#/components/schemas/date"
          },
          "photo": {
            "description": "Image of the person.",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            },
            "type": "array"
          },
          "qualification": {
            "description": "The official certifications, training, and licenses that authorize or otherwise pertain to the provision of care by the practitioner.  For example, a medical license issued by a medical board authorizing the practitioner to practice medicine within a certian locality.",
            "items": {
              "$ref": "#/components/schemas/Practitioner_Qualification"
            },
            "type": "array"
          },
          "communication": {
            "description": "A language the practitioner can use in patient communication.",
            "items": {
              "$ref": "#/components/schemas/CodeableConcept"
            },
            "type": "array"
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceType"
        ]
      },
      "PractitionerRole": {
        "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.",
        "properties": {
          "resourceType": {
            "description": "This is a PractitionerRole resource",
            "enum": [
              "PractitionerRole"
            ]
          },
          "id": {
            "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
            "$ref": "#/components/schemas/id"
          },
          "meta": {
            "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
            "$ref": "#/components/schemas/Meta"
          },
          "implicitRules": {
            "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
            "$ref": "#/components/schemas/uri"
          },
          "language": {
            "description": "The base language in which the resource is written.",
            "$ref": "#/components/schemas/code"
          },
          "text": {
            "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
            "$ref": "#/components/schemas/Narrative"
          },
          "contained": {
            "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
            "items": {
              "$ref": "#/components/schemas/ResourceList"
            },
            "type": "array"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "identifier": {
            "description": "Business Identifiers that are specific to a role/location.",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "type": "array"
          },
          "active": {
            "description": "Whether this practitioner role record is in active use.",
            "$ref": "#/components/schemas/boolean"
          },
          "period": {
            "description": "The period during which the person is authorized to act as a practitioner in these role(s) for the organization.",
            "$ref": "#/components/schemas/Period"
          },
          "practitioner": {
            "description": "Practitioner that is able to provide the defined services for the organization.",
            "$ref": "#/components/schemas/Reference"
          },
          "organization": {
            "description": "The organization where the Practitioner performs the roles associated.",
            "$ref": "#/components/schemas/Reference"
          },
          "code": {
            "description": "Roles which this practitioner is authorized to perform for the organization.",
            "items": {
              "$ref": "#/components/schemas/CodeableConcept"
            },
            "type": "array"
          },
          "specialty": {
            "description": "Specific specialty of the practitioner.",
            "items": {
              "$ref": "#/components/schemas/CodeableConcept"
            },
            "type": "array"
          },
          "location": {
            "description": "The location(s) at which this practitioner provides care.",
            "items": {
              "$ref": "#/components/schemas/Reference"
            },
            "type": "array"
          },
          "healthcareService": {
            "description": "The list of healthcare services that this worker provides for this role's Organization/Location(s).",
            "items": {
              "$ref": "#/components/schemas/Reference"
            },
            "type": "array"
          },
          "telecom": {
            "description": "Contact details that are specific to the role/location/service.",
            "items": {
              "$ref": "#/components/schemas/ContactPoint"
            },
            "type": "array"
          },
          "availableTime": {
            "description": "A collection of times the practitioner is available or performing this role at the location and/or healthcareservice.",
            "items": {
              "$ref": "#/components/schemas/PractitionerRole_AvailableTime"
            },
            "type": "array"
          },
          "notAvailable": {
            "description": "The practitioner is not available or performing this role during this period of time due to the provided reason.",
            "items": {
              "$ref": "#/components/schemas/PractitionerRole_NotAvailable"
            },
            "type": "array"
          },
          "availabilityExceptions": {
            "description": "A description of site availability exceptions, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as details in the available Times and not available Times.",
            "$ref": "#/components/schemas/string"
          },
          "endpoint": {
            "description": "Technical endpoints providing access to services operated for the practitioner with this role.",
            "items": {
              "$ref": "#/components/schemas/Reference"
            },
            "type": "array"
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceType"
        ]
      },
      "Age": {
        "description": "A duration of time during which an organism (or a process) has existed.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "value": {
            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
            "$ref": "#/components/schemas/decimal"
          },
          "comparator": {
            "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
            "enum": [
              "<",
              "<=",
              ">=",
              ">"
            ]
          },
          "unit": {
            "description": "A human-readable form of the unit.",
            "$ref": "#/components/schemas/string"
          },
          "system": {
            "description": "The identification of the system that provides the coded form of the unit.",
            "$ref": "#/components/schemas/uri"
          },
          "code": {
            "description": "A computer processable form of the unit in some unit representation system.",
            "$ref": "#/components/schemas/code"
          }
        },
        "additionalProperties": false
      },
      "PractitionerRole_NotAvailable": {
        "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "description": {
            "description": "The reason that can be presented to the user as to why this time is not available.",
            "$ref": "#/components/schemas/string"
          },
          "during": {
            "description": "Service is not available (seasonally or for a public holiday) from this date.",
            "$ref": "#/components/schemas/Period"
          }
        },
        "additionalProperties": false
      },
      "Coding": {
        "description": "A reference to a code defined by a terminology system.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "system": {
            "description": "The identification of the code system that defines the meaning of the symbol in the code.",
            "$ref": "#/components/schemas/uri"
          },
          "version": {
            "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            "$ref": "#/components/schemas/string"
          },
          "code": {
            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            "$ref": "#/components/schemas/code"
          },
          "display": {
            "description": "A representation of the meaning of the code in the system, following the rules of the system.",
            "$ref": "#/components/schemas/string"
          },
          "userSelected": {
            "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            "$ref": "#/components/schemas/boolean"
          }
        },
        "additionalProperties": false
      },
      "uri": {
        "pattern": "^\\S*$",
        "type": "string",
        "description": "String of characters used to identify a name or a resource"
      },
      "positiveInt": {
        "pattern": "^[1-9][0-9]*$",
        "type": "number",
        "description": "An integer with a value that is positive (e.g. >0)"
      },
      "Bundle_Link": {
        "description": "A container for a collection of resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "relation": {
            "description": "A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).",
            "$ref": "#/components/schemas/string"
          },
          "url": {
            "description": "The reference details for the link.",
            "$ref": "#/components/schemas/uri"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "versionId": {
            "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.",
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "description": "When the resource last changed - e.g. when the version changed.",
            "$ref": "#/components/schemas/instant"
          },
          "source": {
            "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.",
            "$ref": "#/components/schemas/uri"
          },
          "profile": {
            "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
            "items": {
              "$ref": "#/components/schemas/canonical"
            },
            "type": "array"
          },
          "security": {
            "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
            "items": {
              "$ref": "#/components/schemas/Coding"
            },
            "type": "array"
          },
          "tag": {
            "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
            "items": {
              "$ref": "#/components/schemas/Coding"
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "Location_Position": {
        "description": "Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "longitude": {
            "description": "Longitude. The value domain and the interpretation are the same as for the text of the longitude element in KML (see notes below).",
            "$ref": "#/components/schemas/decimal"
          },
          "latitude": {
            "description": "Latitude. The value domain and the interpretation are the same as for the text of the latitude element in KML (see notes below).",
            "$ref": "#/components/schemas/decimal"
          },
          "altitude": {
            "description": "Altitude. The value domain and the interpretation are the same as for the text of the altitude element in KML (see notes below).",
            "$ref": "#/components/schemas/decimal"
          }
        },
        "additionalProperties": false
      },
      "url": {
        "pattern": "^\\S*$",
        "type": "string",
        "description": "A URI that is a literal reference"
      },
      "Timing_Repeat": {
        "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "boundsDuration": {
            "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
            "$ref": "#/components/schemas/Duration"
          },
          "boundsRange": {
            "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
            "$ref": "#/components/schemas/Range"
          },
          "boundsPeriod": {
            "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
            "$ref": "#/components/schemas/Period"
          },
          "count": {
            "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values.",
            "$ref": "#/components/schemas/positiveInt"
          },
          "countMax": {
            "description": "If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.",
            "$ref": "#/components/schemas/positiveInt"
          },
          "duration": {
            "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration.",
            "$ref": "#/components/schemas/decimal"
          },
          "durationMax": {
            "description": "If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length.",
            "$ref": "#/components/schemas/decimal"
          },
          "durationUnit": {
            "description": "The units of time for the duration, in UCUM units.",
            "enum": [
              "s",
              "min",
              "h",
              "d",
              "wk",
              "mo",
              "a"
            ]
          },
          "frequency": {
            "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency.",
            "$ref": "#/components/schemas/positiveInt"
          },
          "frequencyMax": {
            "description": "If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range.",
            "$ref": "#/components/schemas/positiveInt"
          },
          "period": {
            "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length.",
            "$ref": "#/components/schemas/decimal"
          },
          "periodMax": {
            "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3-5 days.",
            "$ref": "#/components/schemas/decimal"
          },
          "periodUnit": {
            "description": "The units of time for the period in UCUM units.",
            "enum": [
              "s",
              "min",
              "h",
              "d",
              "wk",
              "mo",
              "a"
            ]
          },
          "dayOfWeek": {
            "description": "If one or more days of week is provided, then the action happens only on the specified day(s).",
            "items": {
              "$ref": "#/components/schemas/code"
            },
            "type": "array"
          },
          "timeOfDay": {
            "description": "Specified time of day for action to take place.",
            "items": {
              "$ref": "#/components/schemas/time"
            },
            "type": "array"
          },
          "when": {
            "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur.",
            "items": {
              "enum": [
                "MORN",
                "MORN.early",
                "MORN.late",
                "NOON",
                "AFT",
                "AFT.early",
                "AFT.late",
                "EVE",
                "EVE.early",
                "EVE.late",
                "NIGHT",
                "PHS",
                "HS",
                "WAKE",
                "C",
                "CM",
                "CD",
                "CV",
                "AC",
                "ACM",
                "ACD",
                "ACV",
                "PC",
                "PCM",
                "PCD",
                "PCV"
              ]
            },
            "type": "array"
          },
          "offset": {
            "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event.",
            "$ref": "#/components/schemas/unsignedInt"
          }
        },
        "additionalProperties": false
      },
      "HumanName": {
        "description": "A human's name with the ability to identify parts and usage.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "use": {
            "description": "Identifies the purpose for this name.",
            "enum": [
              "usual",
              "official",
              "temp",
              "nickname",
              "anonymous",
              "old",
              "maiden"
            ]
          },
          "text": {
            "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts.",
            "$ref": "#/components/schemas/string"
          },
          "family": {
            "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father.",
            "$ref": "#/components/schemas/string"
          },
          "given": {
            "description": "Given name.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "prefix": {
            "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "suffix": {
            "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "period": {
            "description": "Indicates the period of time when this name was valid for the named person.",
            "$ref": "#/components/schemas/Period"
          }
        },
        "additionalProperties": false
      },
      "boolean": {
        "pattern": "^true|false$",
        "type": "boolean",
        "description": "Value of \"true\" or \"false\""
      },
      "Money": {
        "description": "An amount of economic utility in some recognized currency.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "value": {
            "description": "Numerical value (with implicit precision).",
            "$ref": "#/components/schemas/decimal"
          },
          "currency": {
            "description": "ISO 4217 Currency Code.",
            "$ref": "#/components/schemas/code"
          }
        },
        "additionalProperties": false
      },
      "CodeableConcept": {
        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "coding": {
            "description": "A reference to a code defined by a terminology system.",
            "items": {
              "$ref": "#/components/schemas/Coding"
            },
            "type": "array"
          },
          "text": {
            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            "$ref": "#/components/schemas/string"
          }
        },
        "additionalProperties": false
      },
      "Duration": {
        "description": "A length of time.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "value": {
            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
            "$ref": "#/components/schemas/decimal"
          },
          "comparator": {
            "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
            "enum": [
              "<",
              "<=",
              ">=",
              ">"
            ]
          },
          "unit": {
            "description": "A human-readable form of the unit.",
            "$ref": "#/components/schemas/string"
          },
          "system": {
            "description": "The identification of the system that provides the coded form of the unit.",
            "$ref": "#/components/schemas/uri"
          },
          "code": {
            "description": "A computer processable form of the unit in some unit representation system.",
            "$ref": "#/components/schemas/code"
          }
        },
        "additionalProperties": false
      },
      "Quantity": {
        "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "value": {
            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
            "$ref": "#/components/schemas/decimal"
          },
          "comparator": {
            "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
            "enum": [
              "<",
              "<=",
              ">=",
              ">"
            ]
          },
          "unit": {
            "description": "A human-readable form of the unit.",
            "$ref": "#/components/schemas/string"
          },
          "system": {
            "description": "The identification of the system that provides the coded form of the unit.",
            "$ref": "#/components/schemas/uri"
          },
          "code": {
            "description": "A computer processable form of the unit in some unit representation system.",
            "$ref": "#/components/schemas/code"
          }
        },
        "additionalProperties": false
      },
      "Count": {
        "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "value": {
            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
            "$ref": "#/components/schemas/decimal"
          },
          "comparator": {
            "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
            "enum": [
              "<",
              "<=",
              ">=",
              ">"
            ]
          },
          "unit": {
            "description": "A human-readable form of the unit.",
            "$ref": "#/components/schemas/string"
          },
          "system": {
            "description": "The identification of the system that provides the coded form of the unit.",
            "$ref": "#/components/schemas/uri"
          },
          "code": {
            "description": "A computer processable form of the unit in some unit representation system.",
            "$ref": "#/components/schemas/code"
          }
        },
        "additionalProperties": false
      },
      "date": {
        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
        "type": "string",
        "description": "A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates."
      },
      "DataRequirement_CodeFilter": {
        "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "path": {
            "description": "The code-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept.",
            "$ref": "#/components/schemas/string"
          },
          "searchParam": {
            "description": "A token parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept.",
            "$ref": "#/components/schemas/string"
          },
          "valueSet": {
            "description": "The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset.",
            "$ref": "#/components/schemas/canonical"
          },
          "code": {
            "description": "The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes.",
            "items": {
              "$ref": "#/components/schemas/Coding"
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "integer": {
        "pattern": "^-?([0]|([1-9][0-9]*))$",
        "type": "number",
        "description": "A whole number"
      },
      "TriggerDefinition": {
        "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "type": {
            "description": "The type of triggering event.",
            "enum": [
              "named-event",
              "periodic",
              "data-changed",
              "data-added",
              "data-modified",
              "data-removed",
              "data-accessed",
              "data-access-ended"
            ]
          },
          "name": {
            "description": "A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context.",
            "$ref": "#/components/schemas/string"
          },
          "timingTiming": {
            "description": "The timing of the event (if this is a periodic trigger).",
            "$ref": "#/components/schemas/Timing"
          },
          "timingReference": {
            "description": "The timing of the event (if this is a periodic trigger).",
            "$ref": "#/components/schemas/Reference"
          },
          "timingDate": {
            "description": "The timing of the event (if this is a periodic trigger).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
            "type": "string"
          },
          "timingDateTime": {
            "description": "The timing of the event (if this is a periodic trigger).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
            "type": "string"
          },
          "data": {
            "description": "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.",
            "items": {
              "$ref": "#/components/schemas/DataRequirement"
            },
            "type": "array"
          },
          "condition": {
            "description": "A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires.",
            "$ref": "#/components/schemas/Expression"
          }
        },
        "additionalProperties": false
      },
      "instant": {
        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
        "type": "string",
        "description": "An instant in time - known at least to the second"
      },
      "Attachment": {
        "description": "For referring to data content defined in other formats.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "contentType": {
            "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.",
            "$ref": "#/components/schemas/code"
          },
          "language": {
            "description": "The human language of the content. The value can be any valid value according to BCP 47.",
            "$ref": "#/components/schemas/code"
          },
          "data": {
            "description": "The actual data of the attachment - a sequence of bytes, base64 encoded.",
            "$ref": "#/components/schemas/base64Binary"
          },
          "url": {
            "description": "A location where the data can be accessed.",
            "$ref": "#/components/schemas/url"
          },
          "size": {
            "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done).",
            "$ref": "#/components/schemas/unsignedInt"
          },
          "hash": {
            "description": "The calculated hash of the data using SHA-1. Represented using base64.",
            "$ref": "#/components/schemas/base64Binary"
          },
          "title": {
            "description": "A label or set of text to display in place of the data.",
            "$ref": "#/components/schemas/string"
          },
          "creation": {
            "description": "The date that the attachment was first created.",
            "$ref": "#/components/schemas/dateTime"
          }
        },
        "additionalProperties": false
      },
      "Bundle_Request": {
        "description": "A container for a collection of resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "method": {
            "description": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.",
            "enum": [
              "GET",
              "HEAD",
              "POST",
              "PUT",
              "DELETE",
              "PATCH"
            ]
          },
          "url": {
            "description": "The URL for this entry, relative to the root (the address to which the request is posted).",
            "$ref": "#/components/schemas/uri"
          },
          "ifNoneMatch": {
            "description": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread).",
            "$ref": "#/components/schemas/string"
          },
          "ifModifiedSince": {
            "description": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread).",
            "$ref": "#/components/schemas/instant"
          },
          "ifMatch": {
            "description": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency).",
            "$ref": "#/components/schemas/string"
          },
          "ifNoneExist": {
            "description": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not including the \"?\").",
            "$ref": "#/components/schemas/string"
          }
        },
        "additionalProperties": false
      },
      "Timing": {
        "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "event": {
            "description": "Identifies specific times when the event occurs.",
            "items": {
              "$ref": "#/components/schemas/dateTime"
            },
            "type": "array"
          },
          "repeat": {
            "description": "A set of rules that describe when the event is scheduled.",
            "$ref": "#/components/schemas/Timing_Repeat"
          },
          "code": {
            "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
            "$ref": "#/components/schemas/CodeableConcept"
          }
        },
        "additionalProperties": false
      },
      "canonical": {
        "pattern": "^\\S*$",
        "type": "string",
        "description": "A URI that is a reference to a canonical URL on a FHIR resource"
      },
      "Dosage_DoseAndRate": {
        "description": "Indicates how the medication is/was taken or should be taken by the patient.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "type": {
            "description": "The kind of dose or rate specified, for example, ordered or calculated.",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "doseRange": {
            "description": "Amount of medication per dose.",
            "$ref": "#/components/schemas/Range"
          },
          "doseQuantity": {
            "description": "Amount of medication per dose.",
            "$ref": "#/components/schemas/Quantity"
          },
          "rateRatio": {
            "description": "Amount of medication per unit of time.",
            "$ref": "#/components/schemas/Ratio"
          },
          "rateRange": {
            "description": "Amount of medication per unit of time.",
            "$ref": "#/components/schemas/Range"
          },
          "rateQuantity": {
            "description": "Amount of medication per unit of time.",
            "$ref": "#/components/schemas/Quantity"
          }
        },
        "additionalProperties": false
      },
      "ContactDetail": {
        "description": "Specifies contact information for a person or organization.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of an individual to contact.",
            "$ref": "#/components/schemas/string"
          },
          "telecom": {
            "description": "The contact details for the individual (if a name was provided) or the organization.",
            "items": {
              "$ref": "#/components/schemas/ContactPoint"
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "SampledData": {
        "description": "A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "origin": {
            "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.",
            "$ref": "#/components/schemas/Quantity"
          },
          "period": {
            "description": "The length of time between sampling times, measured in milliseconds.",
            "$ref": "#/components/schemas/decimal"
          },
          "factor": {
            "description": "A correction factor that is applied to the sampled data points before they are added to the origin.",
            "$ref": "#/components/schemas/decimal"
          },
          "lowerLimit": {
            "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit).",
            "$ref": "#/components/schemas/decimal"
          },
          "upperLimit": {
            "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit).",
            "$ref": "#/components/schemas/decimal"
          },
          "dimensions": {
            "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once.",
            "$ref": "#/components/schemas/positiveInt"
          },
          "data": {
            "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value.",
            "$ref": "#/components/schemas/string"
          }
        },
        "additionalProperties": false,
        "required": [
          "origin"
        ]
      },
      "Annotation": {
        "description": "A  text note which also  contains information about who made the statement and when.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "authorReference": {
            "description": "The individual responsible for making the annotation.",
            "$ref": "#/components/schemas/Reference"
          },
          "authorString": {
            "description": "The individual responsible for making the annotation.",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "time": {
            "description": "Indicates when this particular annotation was made.",
            "$ref": "#/components/schemas/dateTime"
          },
          "text": {
            "description": "The text of the annotation in markdown format.",
            "$ref": "#/components/schemas/markdown"
          }
        },
        "additionalProperties": false
      },
      "xhtml": {
        "description": "xhtml - escaped html (see specfication)"
      },
      "Organization_Contact": {
        "description": "A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "purpose": {
            "description": "Indicates a purpose for which the contact can be reached.",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "name": {
            "description": "A name associated with the contact.",
            "$ref": "#/components/schemas/HumanName"
          },
          "telecom": {
            "description": "A contact detail (e.g. a telephone number or an email address) by which the party may be contacted.",
            "items": {
              "$ref": "#/components/schemas/ContactPoint"
            },
            "type": "array"
          },
          "address": {
            "description": "Visiting or postal addresses for the contact.",
            "$ref": "#/components/schemas/Address"
          }
        },
        "additionalProperties": false
      },
      "DataRequirement": {
        "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "type": {
            "description": "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile.",
            "$ref": "#/components/schemas/code"
          },
          "profile": {
            "description": "The profile of the required data, specified as the uri of the profile definition.",
            "items": {
              "$ref": "#/components/schemas/canonical"
            },
            "type": "array"
          },
          "subjectCodeableConcept": {
            "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "subjectReference": {
            "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.",
            "$ref": "#/components/schemas/Reference"
          },
          "mustSupport": {
            "description": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. \n\nThe value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "codeFilter": {
            "description": "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.",
            "items": {
              "$ref": "#/components/schemas/DataRequirement_CodeFilter"
            },
            "type": "array"
          },
          "dateFilter": {
            "description": "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.",
            "items": {
              "$ref": "#/components/schemas/DataRequirement_DateFilter"
            },
            "type": "array"
          },
          "limit": {
            "description": "Specifies a maximum number of results that are required (uses the _count search parameter).",
            "$ref": "#/components/schemas/positiveInt"
          },
          "sort": {
            "description": "Specifies the order of the results to be returned.",
            "items": {
              "$ref": "#/components/schemas/DataRequirement_Sort"
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "Address": {
        "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "use": {
            "description": "The purpose of this address.",
            "enum": [
              "home",
              "work",
              "temp",
              "old",
              "billing"
            ]
          },
          "type": {
            "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
            "enum": [
              "postal",
              "physical",
              "both"
            ]
          },
          "text": {
            "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts.",
            "$ref": "#/components/schemas/string"
          },
          "line": {
            "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "city": {
            "description": "The name of the city, town, suburb, village or other community or delivery center.",
            "$ref": "#/components/schemas/string"
          },
          "district": {
            "description": "The name of the administrative area (county).",
            "$ref": "#/components/schemas/string"
          },
          "state": {
            "description": "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes).",
            "$ref": "#/components/schemas/string"
          },
          "postalCode": {
            "description": "A postal code designating a region defined by the postal service.",
            "$ref": "#/components/schemas/string"
          },
          "country": {
            "description": "Country - a nation as commonly understood or generally accepted.",
            "$ref": "#/components/schemas/string"
          },
          "period": {
            "description": "Time period when address was/is in use.",
            "$ref": "#/components/schemas/Period"
          }
        },
        "additionalProperties": false
      },
      "markdown": {
        "pattern": "^[ \\r\\n\\t\\S]+$",
        "type": "string",
        "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
      },
      "Distance": {
        "description": "A length - a value with a unit that is a physical distance.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "value": {
            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
            "$ref": "#/components/schemas/decimal"
          },
          "comparator": {
            "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
            "enum": [
              "<",
              "<=",
              ">=",
              ">"
            ]
          },
          "unit": {
            "description": "A human-readable form of the unit.",
            "$ref": "#/components/schemas/string"
          },
          "system": {
            "description": "The identification of the system that provides the coded form of the unit.",
            "$ref": "#/components/schemas/uri"
          },
          "code": {
            "description": "A computer processable form of the unit in some unit representation system.",
            "$ref": "#/components/schemas/code"
          }
        },
        "additionalProperties": false
      },
      "RelatedArtifact": {
        "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "type": {
            "description": "The type of relationship to the related artifact.",
            "enum": [
              "documentation",
              "justification",
              "citation",
              "predecessor",
              "successor",
              "derived-from",
              "depends-on",
              "composed-of"
            ]
          },
          "label": {
            "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index.",
            "$ref": "#/components/schemas/string"
          },
          "display": {
            "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.",
            "$ref": "#/components/schemas/string"
          },
          "citation": {
            "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format.",
            "$ref": "#/components/schemas/markdown"
          },
          "url": {
            "description": "A url for the artifact that can be followed to access the actual content.",
            "$ref": "#/components/schemas/url"
          },
          "document": {
            "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element.",
            "$ref": "#/components/schemas/Attachment"
          },
          "resource": {
            "description": "The related resource, such as a library, value set, profile, or other knowledge resource.",
            "$ref": "#/components/schemas/canonical"
          }
        },
        "additionalProperties": false
      },
      "decimal": {
        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
        "type": "number",
        "description": "A rational number with implicit precision"
      },
      "string": {
        "pattern": "^[ \\r\\n\\t\\S]+$",
        "type": "string",
        "description": "A sequence of Unicode characters"
      },
      "base64Binary": {
        "type": "string",
        "description": "A stream of bytes"
      },
      "Range": {
        "description": "A set of ordered Quantities defined by a low and high limit.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "low": {
            "description": "The low limit. The boundary is inclusive.",
            "$ref": "#/components/schemas/Quantity"
          },
          "high": {
            "description": "The high limit. The boundary is inclusive.",
            "$ref": "#/components/schemas/Quantity"
          }
        },
        "additionalProperties": false
      },
      "Contributor": {
        "description": "A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "type": {
            "description": "The type of contributor.",
            "enum": [
              "author",
              "editor",
              "reviewer",
              "endorser"
            ]
          },
          "name": {
            "description": "The name of the individual or organization responsible for the contribution.",
            "$ref": "#/components/schemas/string"
          },
          "contact": {
            "description": "Contact details to assist a user in finding and communicating with the contributor.",
            "items": {
              "$ref": "#/components/schemas/ContactDetail"
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "Signature": {
        "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "type": {
            "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
            "items": {
              "$ref": "#/components/schemas/Coding"
            },
            "type": "array"
          },
          "when": {
            "description": "When the digital signature was signed.",
            "$ref": "#/components/schemas/instant"
          },
          "who": {
            "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key).",
            "$ref": "#/components/schemas/Reference"
          },
          "onBehalfOf": {
            "description": "A reference to an application-usable description of the identity that is represented by the signature.",
            "$ref": "#/components/schemas/Reference"
          },
          "targetFormat": {
            "description": "A mime type that indicates the technical format of the target resources signed by the signature.",
            "$ref": "#/components/schemas/code"
          },
          "sigFormat": {
            "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc.",
            "$ref": "#/components/schemas/code"
          },
          "data": {
            "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty.",
            "$ref": "#/components/schemas/base64Binary"
          }
        },
        "additionalProperties": false,
        "required": [
          "type",
          "who"
        ]
      },
      "DataRequirement_Sort": {
        "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "path": {
            "description": "The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant.",
            "$ref": "#/components/schemas/string"
          },
          "direction": {
            "description": "The direction of the sort, ascending or descending.",
            "enum": [
              "ascending",
              "descending"
            ]
          }
        },
        "additionalProperties": false
      },
      "Expression": {
        "description": "A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "description": {
            "description": "A brief, natural language description of the condition that effectively communicates the intended semantics.",
            "$ref": "#/components/schemas/string"
          },
          "name": {
            "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined.",
            "$ref": "#/components/schemas/id"
          },
          "language": {
            "description": "The media type of the language for the expression.",
            "enum": [
              "text/cql",
              "text/fhirpath",
              "application/x-fhir-query"
            ]
          },
          "expression": {
            "description": "An expression in the specified language that returns a value.",
            "$ref": "#/components/schemas/string"
          },
          "reference": {
            "description": "A URI that defines where the expression is found.",
            "$ref": "#/components/schemas/uri"
          }
        },
        "additionalProperties": false
      },
      "Bundle_Entry": {
        "description": "A container for a collection of resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "link": {
            "description": "A series of links that provide context to this entry.",
            "items": {
              "$ref": "#/components/schemas/Bundle_Link"
            },
            "type": "array"
          },
          "fullUrl": {
            "description": "The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that: \n* fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)\n* Results from operations might involve resources that are not identified.",
            "$ref": "#/components/schemas/uri"
          },
          "resource": {
            "description": "The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type.",
            "$ref": "#/components/schemas/ResourceList"
          },
          "search": {
            "description": "Information about the search process that lead to the creation of this entry.",
            "$ref": "#/components/schemas/Bundle_Search"
          },
          "request": {
            "description": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.",
            "$ref": "#/components/schemas/Bundle_Request"
          },
          "response": {
            "description": "Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history.",
            "$ref": "#/components/schemas/Bundle_Response"
          }
        },
        "additionalProperties": false
      },
      "code": {
        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
        "type": "string",
        "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
      },
      "Dosage": {
        "description": "Indicates how the medication is/was taken or should be taken by the patient.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "sequence": {
            "description": "Indicates the order in which the dosage instructions should be applied or interpreted.",
            "$ref": "#/components/schemas/integer"
          },
          "text": {
            "description": "Free text dosage instructions e.g. SIG.",
            "$ref": "#/components/schemas/string"
          },
          "additionalInstruction": {
            "description": "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\").",
            "items": {
              "$ref": "#/components/schemas/CodeableConcept"
            },
            "type": "array"
          },
          "patientInstruction": {
            "description": "Instructions in terms that are understood by the patient or consumer.",
            "$ref": "#/components/schemas/string"
          },
          "timing": {
            "description": "When medication should be administered.",
            "$ref": "#/components/schemas/Timing"
          },
          "asNeededBoolean": {
            "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).",
            "pattern": "^true|false$",
            "type": "boolean"
          },
          "asNeededCodeableConcept": {
            "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "site": {
            "description": "Body site to administer to.",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "route": {
            "description": "How drug should enter body.",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "method": {
            "description": "Technique for administering medication.",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "doseAndRate": {
            "description": "The amount of medication administered.",
            "items": {
              "$ref": "#/components/schemas/Dosage_DoseAndRate"
            },
            "type": "array"
          },
          "maxDosePerPeriod": {
            "description": "Upper limit on medication per unit of time.",
            "$ref": "#/components/schemas/Ratio"
          },
          "maxDosePerAdministration": {
            "description": "Upper limit on medication per administration.",
            "$ref": "#/components/schemas/Quantity"
          },
          "maxDosePerLifetime": {
            "description": "Upper limit on medication per lifetime of the patient.",
            "$ref": "#/components/schemas/Quantity"
          }
        },
        "additionalProperties": false
      },
      "Extension": {
        "description": "Optional Extension Element - found in all resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "url": {
            "description": "Source of the definition for the extension code - a logical name or a URL.",
            "$ref": "#/components/schemas/uri"
          },
          "valueBase64Binary": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
            "type": "string"
          },
          "valueBoolean": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^true|false$",
            "type": "boolean"
          },
          "valueCanonical": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "valueCode": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
            "type": "string"
          },
          "valueDate": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
            "type": "string"
          },
          "valueDateTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
            "type": "string"
          },
          "valueDecimal": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
            "type": "number"
          },
          "valueId": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
            "type": "string"
          },
          "valueInstant": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
            "type": "string"
          },
          "valueInteger": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?([0]|([1-9][0-9]*))$",
            "type": "number"
          },
          "valueMarkdown": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "valueOid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
            "type": "string"
          },
          "valuePositiveInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[1-9][0-9]*$",
            "type": "number"
          },
          "valueString": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "valueTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
            "type": "string"
          },
          "valueUnsignedInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[0]|([1-9][0-9]*)$",
            "type": "number"
          },
          "valueUri": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "valueUrl": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "valueUuid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          },
          "valueAddress": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Address"
          },
          "valueAge": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Age"
          },
          "valueAnnotation": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Annotation"
          },
          "valueAttachment": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Attachment"
          },
          "valueCodeableConcept": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "valueCoding": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Coding"
          },
          "valueContactPoint": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/ContactPoint"
          },
          "valueCount": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Count"
          },
          "valueDistance": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Distance"
          },
          "valueDuration": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Duration"
          },
          "valueHumanName": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/HumanName"
          },
          "valueIdentifier": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Identifier"
          },
          "valueMoney": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Money"
          },
          "valuePeriod": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Period"
          },
          "valueQuantity": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Quantity"
          },
          "valueRange": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Range"
          },
          "valueRatio": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Ratio"
          },
          "valueReference": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Reference"
          },
          "valueSampledData": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/SampledData"
          },
          "valueSignature": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Signature"
          },
          "valueTiming": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Timing"
          },
          "valueContactDetail": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/ContactDetail"
          },
          "valueContributor": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Contributor"
          },
          "valueDataRequirement": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/DataRequirement"
          },
          "valueExpression": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Expression"
          },
          "valueParameterDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/ParameterDefinition"
          },
          "valueRelatedArtifact": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/RelatedArtifact"
          },
          "valueTriggerDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/TriggerDefinition"
          },
          "valueUsageContext": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/UsageContext"
          },
          "valueDosage": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Dosage"
          },
          "valueMeta": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "PractitionerRole_AvailableTime": {
        "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "daysOfWeek": {
            "description": "Indicates which days of the week are available between the start and end Times.",
            "items": {
              "$ref": "#/components/schemas/code"
            },
            "type": "array"
          },
          "allDay": {
            "description": "Is this always available? (hence times are irrelevant) e.g. 24 hour service.",
            "$ref": "#/components/schemas/boolean"
          },
          "availableStartTime": {
            "description": "The opening time of day. Note: If the AllDay flag is set, then this time is ignored.",
            "$ref": "#/components/schemas/time"
          },
          "availableEndTime": {
            "description": "The closing time of day. Note: If the AllDay flag is set, then this time is ignored.",
            "$ref": "#/components/schemas/time"
          }
        },
        "additionalProperties": false
      },
      "dateTime": {
        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
        "type": "string",
        "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
      },
      "Identifier": {
        "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "use": {
            "description": "The purpose of this identifier.",
            "enum": [
              "usual",
              "official",
              "temp",
              "secondary",
              "old"
            ]
          },
          "type": {
            "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "system": {
            "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            "$ref": "#/components/schemas/uri"
          },
          "value": {
            "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            "$ref": "#/components/schemas/string"
          },
          "period": {
            "description": "Time period during which identifier is/was valid for use.",
            "$ref": "#/components/schemas/Period"
          },
          "assigner": {
            "description": "Organization that issued/manages the identifier.",
            "$ref": "#/components/schemas/Reference"
          }
        },
        "additionalProperties": false
      },
      "DataRequirement_DateFilter": {
        "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "path": {
            "description": "The date-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type date, dateTime, Period, Schedule, or Timing.",
            "$ref": "#/components/schemas/string"
          },
          "searchParam": {
            "description": "A date parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule, or Timing.",
            "$ref": "#/components/schemas/string"
          },
          "valueDateTime": {
            "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
            "type": "string"
          },
          "valuePeriod": {
            "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
            "$ref": "#/components/schemas/Period"
          },
          "valueDuration": {
            "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
            "$ref": "#/components/schemas/Duration"
          }
        },
        "additionalProperties": false
      },
      "Bundle_Search": {
        "description": "A container for a collection of resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "mode": {
            "description": "Why this entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process.",
            "enum": [
              "match",
              "include",
              "outcome"
            ]
          },
          "score": {
            "description": "When searching, the server's search ranking score for the entry.",
            "$ref": "#/components/schemas/decimal"
          }
        },
        "additionalProperties": false
      },
      "Element": {
        "description": "Base definition for all elements in a resource.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "UsageContext": {
        "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "code": {
            "description": "A code that identifies the type of context being specified by this usage context.",
            "$ref": "#/components/schemas/Coding"
          },
          "valueCodeableConcept": {
            "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "valueQuantity": {
            "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
            "$ref": "#/components/schemas/Quantity"
          },
          "valueRange": {
            "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
            "$ref": "#/components/schemas/Range"
          },
          "valueReference": {
            "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
            "$ref": "#/components/schemas/Reference"
          }
        },
        "additionalProperties": false,
        "required": [
          "code"
        ]
      },
      "Bundle_Response": {
        "description": "A container for a collection of resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "status": {
            "description": "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.",
            "$ref": "#/components/schemas/string"
          },
          "location": {
            "description": "The location header created by processing this operation, populated if the operation returns a location.",
            "$ref": "#/components/schemas/uri"
          },
          "etag": {
            "description": "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency)).",
            "$ref": "#/components/schemas/string"
          },
          "lastModified": {
            "description": "The date/time that the resource was modified on the server.",
            "$ref": "#/components/schemas/instant"
          },
          "outcome": {
            "description": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction.",
            "$ref": "#/components/schemas/ResourceList"
          }
        },
        "additionalProperties": false
      },
      "Period": {
        "description": "A time period defined by a start and end date and optionally time.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "start": {
            "description": "The start of the period. The boundary is inclusive.",
            "$ref": "#/components/schemas/dateTime"
          },
          "end": {
            "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.",
            "$ref": "#/components/schemas/dateTime"
          }
        },
        "additionalProperties": false
      },
      "ContactPoint": {
        "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "system": {
            "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
            "enum": [
              "phone",
              "fax",
              "email",
              "pager",
              "url",
              "sms",
              "other"
            ]
          },
          "value": {
            "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address).",
            "$ref": "#/components/schemas/string"
          },
          "use": {
            "description": "Identifies the purpose for the contact point.",
            "enum": [
              "home",
              "work",
              "temp",
              "old",
              "mobile"
            ]
          },
          "rank": {
            "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values.",
            "$ref": "#/components/schemas/positiveInt"
          },
          "period": {
            "description": "Time period when the contact point was/is in use.",
            "$ref": "#/components/schemas/Period"
          }
        },
        "additionalProperties": false
      },
      "ResourceList": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/Location"
          },
          {
            "$ref": "#/components/schemas/Organization"
          },
          {
            "$ref": "#/components/schemas/Practitioner"
          },
          {
            "$ref": "#/components/schemas/PractitionerRole"
          }
        ]
      },
      "unsignedInt": {
        "pattern": "^[0]|([1-9][0-9]*)$",
        "type": "number",
        "description": "An integer with a value that is not negative (e.g. >= 0)"
      },
      "id": {
        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
        "type": "string",
        "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
      },
      "Practitioner_Qualification": {
        "description": "A person who is directly or indirectly involved in the provisioning of healthcare.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "identifier": {
            "description": "An identifier that applies to this person's qualification in this role.",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "type": "array"
          },
          "code": {
            "description": "Coded representation of the qualification.",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "period": {
            "description": "Period during which the qualification is valid.",
            "$ref": "#/components/schemas/Period"
          },
          "issuer": {
            "description": "Organization that regulates and issues the qualification.",
            "$ref": "#/components/schemas/Reference"
          }
        },
        "additionalProperties": false,
        "required": [
          "code"
        ]
      },
      "Ratio": {
        "description": "A relationship of two Quantity values - expressed as a numerator and a denominator.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "numerator": {
            "description": "The value of the numerator.",
            "$ref": "#/components/schemas/Quantity"
          },
          "denominator": {
            "description": "The value of the denominator.",
            "$ref": "#/components/schemas/Quantity"
          }
        },
        "additionalProperties": false
      },
      "Reference": {
        "description": "A reference from one resource to another.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "reference": {
            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            "$ref": "#/components/schemas/string"
          },
          "type": {
            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            "$ref": "#/components/schemas/uri"
          },
          "identifier": {
            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            "$ref": "#/components/schemas/Identifier"
          },
          "display": {
            "description": "Plain text narrative that identifies the resource in addition to the resource reference.",
            "$ref": "#/components/schemas/string"
          }
        },
        "additionalProperties": false
      },
      "time": {
        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
        "type": "string",
        "description": "A time during the day, with no date specified"
      },
      "ParameterDefinition": {
        "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the parameter used to allow access to the value of the parameter in evaluation contexts.",
            "$ref": "#/components/schemas/code"
          },
          "use": {
            "description": "Whether the parameter is input or output for the module.",
            "$ref": "#/components/schemas/code"
          },
          "min": {
            "description": "The minimum number of times this parameter SHALL appear in the request or response.",
            "$ref": "#/components/schemas/integer"
          },
          "max": {
            "description": "The maximum number of times this element is permitted to appear in the request or response.",
            "$ref": "#/components/schemas/string"
          },
          "documentation": {
            "description": "A brief discussion of what the parameter is for and how it is used by the module.",
            "$ref": "#/components/schemas/string"
          },
          "type": {
            "description": "The type of the parameter.",
            "$ref": "#/components/schemas/code"
          },
          "profile": {
            "description": "If specified, this indicates a profile that the input data must conform to, or that the output data will conform to.",
            "$ref": "#/components/schemas/canonical"
          }
        },
        "additionalProperties": false
      },
      "Location_HoursOfOperation": {
        "description": "Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "daysOfWeek": {
            "description": "Indicates which days of the week are available between the start and end Times.",
            "items": {
              "$ref": "#/components/schemas/code"
            },
            "type": "array"
          },
          "allDay": {
            "description": "The Location is open all day.",
            "$ref": "#/components/schemas/boolean"
          },
          "openingTime": {
            "description": "Time that the Location opens.",
            "$ref": "#/components/schemas/time"
          },
          "closingTime": {
            "description": "Time that the Location closes.",
            "$ref": "#/components/schemas/time"
          }
        },
        "additionalProperties": false
      },
      "Narrative": {
        "description": "A human-readable summary of the resource conveying the essential clinical and business information for the resource.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "status": {
            "description": "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.",
            "enum": [
              "generated",
              "extensions",
              "additional",
              "empty"
            ]
          },
          "div": {
            "description": "The actual narrative content, a stripped down version of XHTML.",
            "$ref": "#/components/schemas/xhtml"
          }
        },
        "additionalProperties": false,
        "required": [
          "div"
        ]
      }
    }
  }
}
